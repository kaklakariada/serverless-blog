AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless blog

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: ${stage}
      Variables:
        stage: ${stage}
      DefinitionBody:
        swagger: '2.0'
        info:
          title:
            Ref: AWS::StackName
          description: |
            A serverless blog using aws-lambda-request-handler
        paths:
          /blogpost/{id}/comment:
            post:
              description: Post a blog comment
              responses:
                default:
                  statusCode: 200
              x-amazon-apigateway-integration:
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostCommentLambda.Arn}/invocations

  PostCommentLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.github.kaklakariada.blog.handler.PostCommentHandler
      Runtime: java8
      CodeUri: ${CodeUri}
      Events:
        PostComment:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /blogpost/{id}/comment
            Method: POST


  BlogPostCommentTable: 
    Type: "AWS::DynamoDB::Table"
    Properties: 
      AttributeDefinitions: 
        - 
          AttributeName: CommentId
          AttributeType: S
        - 
          AttributeName: BlogPostId
          AttributeType: S
      KeySchema: 
        - 
          AttributeName: CommentId
          KeyType: HASH
        - 
          AttributeName: BlogPostId
          KeyType: RANGE
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: "${stage}_blogpostcomments"
            
Outputs:
  ApiUrl:
    Description: API endpoint URL
    Value: !Sub https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${stage}


